package components

import (
    "github.com/szymon676/codehund/types" 
    "time"     
    "fmt"
)

func formatTimeDifference(postTime time.Time) string {
	difference := time.Since(postTime)
	switch {
	case difference < 2*time.Minute:
		return "a minute ago"
	case difference < time.Hour:
		minutes := int(difference.Minutes())
		if minutes == 1 {
			return "a minute ago"
		}
		return fmt.Sprintf("%d minutes ago", minutes)
	case difference < 2*time.Hour:
		return "an hour ago"
	case difference < 24*time.Hour:
		hours := int(difference.Hours())
		if hours == 1 {
			return "an hour ago"
		}
		return fmt.Sprintf("%d hours ago", hours)
	case difference < 48*time.Hour:
		return "yesterday"
	case difference < 30*24*time.Hour:
		return postTime.Format("Jan 02 15:04")
	default:
		return postTime.Format("Jan 02, 2006")
	}
}

templ RenderPost(post types.Post, username string) {
    <div class="w-96 p-4 my-4 text-black shadow-lg rounded-xl">
        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-semibold mb-2 underline decoration-sky-500">{post.Author}</h1>
            <div hx-confirm="Are you sure you want to delete this post?">
                if username != "" {
                    <button type="button" hx-delete={"/posts/" + fmt.Sprintf("%d",post.ID)} hx-swap="outerHTML"><i class="fa fa-trash text-xl" hx-></i></button>
				}
            </div>
        </div>
        <p class="text-xl mt-4">{post.Content}</p>
        <p class="text-gray-600 text-md mt-5">Posted at: {formatTimeDifference(post.Date)}</p>
    </div>
}